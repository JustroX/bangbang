<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set singleplayer
global.singleplayer = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///add listener
htme_serverEventHandlerDisconnecting(scr_disconnected);
htme_serverEventHandlerConnecting(scr_connected);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///add team
team = -1;
var num_of_players = instance_number(obj_team_identifier);
for(var i=0; i&lt;num_of_players; i++)
{
   var inst = instance_find(obj_team_identifier,i);
   with(inst)
   {
    if(htme_isLocal()) other.team = team;
   }
}

show_debug_message(team);
switch(team)
{
    case 1:
            var team_count = htme_globalGet("team1");
            show_debug_message(team_count+1);
            htme_globalSet("team1",team_count+1,buffer_s8);
            break;
    case 2: 
            var team_count = htme_globalGet("team2");
            htme_globalSet("team2",team_count+1,buffer_s8);
            break;
    case 3: 
            var team_count = htme_globalGet("team3");
            htme_globalSet("team3",team_count+1,buffer_s8);
            break;
}

count = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create the player
var xx, yy;

var offset  = random_range(-32,32);
switch(team)
{
    case 1: 
            xx = 640+offset;
            yy = 930;
    break;
    case 2: 
            xx = 2592+offset;
            yy = 930;
    break;
    case 3:
            xx = 1456+offset;
            yy = 746;
    break;    
}

player = instance_create(xx,yy,obj_player);
player.team = team;

player_alive = true;


mx = 0;
my = 0;
angle = 0;
lives = 3;
pressed  =0;
if(htme_isServer())
{
/*
sample_consumable = instance_create(316,948,obj_drop);
sample_consumable.drop_id = 6;
*/
alarm[4] = 1800 + floor(random_range(-300,300));

}

done = false;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset stats

multikill = 0;
dammage_dealt = 0;
kills = 0;
deaths = 0;
max_mkill = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create the player


var xx, yy;

var offset  = random_range(-32,32);

for(var i=1; i&lt;=3; i++)
{

switch(i)
{
    case 1: 
            xx = 640+offset;
            yy = 930;
    break;
    case 2: 
            xx = 2592+offset;
            yy = 930;
    break;
    case 3:
            xx = 1456+offset;
            yy = 746;
    break;    
}
var found = false;
var item_size = ds_list_size(obj_database.item);
var ran_id; 
while(!found)
{
    ran_id = floor(random_range(0,item_size));
    found = db_is_ingame(obj_database,ran_id);
}

var inst = instance_create(xx,yy,obj_drop);
inst.drop_id = ran_id;
}

alarm[4] = 600 + floor(random_range(-300,300));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///bilang
  var t1=0, t2=0, t3=0;
    var n = instance_number(obj_team_identifier);
    for(var i=0; i&lt;n; i++)
    {
        var inst = instance_find(obj_team_identifier,i);
        var t = inst.team;
        show_debug_message("TEAM: "+string(t));
        t1+=(t==1);
        t2+=(t==2);
        t3+=(t==3);
    }
    
    htme_globalSet("team1",t1,buffer_s8);
    htme_globalSet("team2",t2,buffer_s8);
    htme_globalSet("team3",t3,buffer_s8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Shutdown client or server
// Tell client/server that we want to shutdown now
if htme_disconnectNow()
{
    // If disconnect is ok then do some cleaning
    // Remove persistent but not synced objects
    with obj_create_network_objects instance_destroy();
    // Go back to menu room
    room_goto(multiplayer_end);    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///respawn
player_alive = true;
var xx, yy;

var offset  = random_range(-32,32);
switch(obj_team_identifier.team)
{
    case 1: 
            xx = 640+offset;
            yy = 930;
    break;
    case 2: 
            xx = 2592+offset;
            yy = 930;
    break;
    case 3:
            xx = 1456+offset;
            yy = 746;
    break;    
}

player = instance_create(xx,yy,obj_player);
player.team = obj_team_identifier.team;
view_object[0] = player;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset multikill
multikill = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///update mouse coors idk kung kailangan pa toh
/*
var inst = obj_controller;

pressed0 = device_mouse_check_button(0,mb_left);
pressed1 = device_mouse_check_button(1,mb_left);

if((pressed0 || pressed1) &amp;&amp; !(pressed0 and pressed1))
{
    if(!inst.pressed0 and !inst.pressed1)
    {
        mx = pressed0*device_mouse_x(0) + pressed1*device_mouse_x(1);
        my = pressed0*device_mouse_y(0) + pressed1*device_mouse_y(1); 
        angle = point_direction(obj_player.x,obj_player.y,mx,my);
        pressed = true;
    } 
    else
        pressed =false;

}

if(pressed0 and pressed1)
{
    mx = (!inst.pressed0)*device_mouse_x(0) + (!inst.pressed1)*device_mouse_x(1);
    my = (!inst.pressed0)*device_mouse_y(0) + (!inst.pressed1)*device_mouse_y(1);  
    angle = point_direction(obj_player.x,obj_player.y,mx,my);
    pressed = true;
}

if(!pressed0 and !pressed1)
{
    pressed = false;
}

*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check if player is not dead
if(player_alive)
{
    if(player.hp&lt;0)
    {
        player.dead = 1;
        player_alive = false;
        deaths+=1;
        lives-=1;
        if(lives&gt;0)
        alarm[1] = deaths*300;
    }
}

if(!player_alive &amp;&amp; lives&lt;=0 &amp;&amp; !done)
{
done = true;
    ///add team
    switch(team)
    {
        case 1:
                var team_count = htme_globalGet("team1");
                htme_globalSet("team1",team_count-1,buffer_s8);
                break;
        case 2: 
                var team_count = htme_globalGet("team2");
                htme_globalSet("team2",team_count-1,buffer_s8);
                break;
        case 3: 
                var team_count = htme_globalGet("team3");
                htme_globalSet("team3",team_count-1,buffer_s8);
                break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check if may nanalo na

if(count++&gt;30)
{
//get super globals
team1 = htme_globalGet("team1");
team2 = htme_globalGet("team2");
team3 = htme_globalGet("team3");

if(team1 == 0 and team2 == 0 and team3 &gt; 0 and alarm[2]==-1)
{  
    var a = instance_create(0,0,obj_winner_control);
    a.winner = 3;
    
    a.max_mkills = max_mkill;
    a.deaths = deaths;
    a.kills = kills;
    a.damage= dammage_dealt;
    a.team = team;
    
    alarm[2] = 150;
    if(htme_isServer())
    {
         alarm[2] = 210;
         announce_str("Team 3 wins!");  
    }
}

if(team1 == 0 and team2 &gt; 0 and team3 == 0 and alarm[2]==-1)
{
    var a = instance_create(0,0,obj_winner_control);
    a.winner = 2;
    
    a.max_mkills = max_mkill;
    a.deaths = deaths;
    a.kills = kills;
    a.damage= dammage_dealt;
    a.team = team;
    
    alarm[2] = 150;
    if(htme_isServer())
    {
        announce_str("Team 2 wins!");    
        alarm[2] = 210;
    }
}

if(team1 &gt; 0 and team2 == 0 and team3 == 0 and alarm[2]==-1)
{
    var a = instance_create(0,0,obj_winner_control);
    a.winner = 1;
    
    
    a.max_mkills = max_mkill;
    a.deaths = deaths;
    a.kills = kills;
    a.damage= dammage_dealt;
    a.team = team;
    
    alarm[2] = 150;
    if(htme_isServer())
    {
        alarm[2] = 210;
        announce_str("Team 1 wins!");    
    }
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw player name HUD
if(player_alive)
{

draw_healthbar(10,32,256,42,player.hp/player.max_hp*100,make_colour_rgb(87,13,18),make_colour_rgb(235,67,71),make_colour_rgb(235,67,71),0,true,false);
draw_healthbar(10,37,256,42,player.hp/player.max_hp*100,make_colour_rgb(87,13,18),make_colour_rgb(199,16,26),make_colour_rgb(199,16,26),0,false,false);
if(global.jet_fuel!=0)
{
draw_healthbar(10,47,floor(256*2/3),52,player.jet_fuel/global.jet_fuel*100,make_colour_rgb(11,71,51),make_colour_rgb(115,250,205),make_colour_rgb(115,250,205),0,true,false);
draw_healthbar(10,52,floor(256*2/3),57,player.jet_fuel/global.jet_fuel*100,make_colour_rgb(11,71,51),make_colour_rgb(16,199,136),make_colour_rgb(16,199,136),0,true,false);
}

var ammo_count = 0;
if(ds_list_size(player.gun_choices)&gt;0)
{
    var tgun = player.gun_choices[| player.gun_choice];
    ammo_count = tgun[| 1];   
}
draw_set_color(c_white)
draw_text(22,57,ammo_count);
draw_sprite(spr_ammmo_indicator,0,10,62);
draw_text(10,10,player.name);
}
/*
draw_text(view_wview[0]-10,32,kills);
draw_text(view_wview[0]-20,32,max_mkill);
draw_text(view_wview[0]-30,32,multikill);
draw_text(view_wview[0]-40,32,dammage_dealt);
draw_text(view_wview[0]-50,32,deaths);


if(count&gt;35)
{
draw_text(view_wview[0]-70,32,team1);
draw_text(view_wview[0]-90,32,team2);
draw_text(view_wview[0]-110,32,team3);
}
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>714</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_life_images</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>202</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>10</string>
          </argument>
          <argument>
            <kind>5</kind>
            <sprite>spr_heart</sprite>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="8">
      <action>
        <libid>1</libid>
        <id>407</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_question</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>2</kind>
            <string>Are you sure you want to disconnect?</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shutdown
with(obj_htme)
{
    event_perform(ev_keypress,vk_escape);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
