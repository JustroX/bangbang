<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_character_default</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///networking
mp_sync();

//position
mp_addPosition("Pos",room_speed div 2);
mp_setType("Pos",mp_type.SMART);
mp_tolerance("Pos",20);

//drawing
mp_addBuiltinBasic("basicDrawing",1*room_speed);
mp_setType("basicDrawing",mp_type.SMART);

//physics
mp_addBuiltinPhysics("basicPhysics",15*room_speed);
mp_setType("basicPhysics",mp_type.SMART);

//player
mp_add("playerName","name",buffer_string,60*room_speed);

//appearance

mp_add("playerAppearance","mask,jetpack,helmet,vest,pants,shoes",buffer_s8,60*room_speed);
mp_add("playerGun","gun",buffer_s8,room_speed div 3);
mp_setType("playerAppearance",mp_type.SMART);
mp_setType("playerGun",mp_type.SMART);

//statistics
mp_add("playerStatistics","hp,jump,speed,hp_regen,armor,crit_chance,scaling,team",buffer_f32,room_speed div 3);
mp_setType("playerStatistics",mp_type.SMART);

//jet fuel
mp_add("jet_fuel","jet_fuel",buffer_f32,room_speed div 4);
mp_setType("playerStatistics",mp_type.SMART);



//controls
mp_add("controls","pressed_jump,pressed_left,pressed_right,pressed_down",buffer_bool,1);

//theta
mp_add("angle","theta",buffer_f32,1);

//loaded
mp_add("Isloaded","loaded",buffer_bool,room_speed);
mp_setType("Isloaded",mp_type.SMART);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///define variables
image_speed = 0;
image_index = 1;

self.pressed_jump = false;
self.pressed_left = false;
self.pressed_right = false;
self.pressed_down = false;
self.name = global.username;
feet = spr_walk_animation;

if(htme_isLocal())
{
    //define appearance
    self.mask = global.mask;
    self.jetpack = global.jetpack;
    self.helmet = global.helmet;
    self.vest = global.vest;
    self.pants = global.pants;
    self.shoes = global.shoes;
    self.loaded = true;
    
    //define statistics
    self.hp = global.hp;
    self.jump = global.jump;
    self.jet_fuel = global.jet_fuel;
    self.player_speed = global.player_speed;
    self.hp_regen  = global.hp_regen;
    self.armor     = global.armor;
    self.crit_chance = global.crit_chance;
    self.scaling    = 1;
    
    //define in game items
    self.gun_choices = ds_list_create();
    self.consumables = ds_list_create();
    
    ///load guns or consumables
    
    for(var i=0; i&lt;ds_list_size(global.bag); i++)
    {
        var bag_item = global.bag[| i];
        if(db_is_gun(obj_database,bag_item[| item_id]))
        {
            var gun_choices_size = ds_list_size(self.gun_choices);
            var gmap = db_get(obj_database,"gun",db_get_ingame(obj_database,bag_item[| item_id]));
            var temp_list = ds_list_create();
            temp_list[| item_id] = bag_item[| item_id];
            temp_list[| 1 ]      = gmap[? "ammo_count"];
            // show_message(bag_item[| item_id]);
            self.gun_choices[| gun_choices_size] = temp_list ;
            ds_list_mark_as_list(self.gun_choices,gun_choices_size);
        }
        else
        if(db_is_consumable(obj_database,bag_item[| item_id]))
        {
            var consumables_size = ds_list_size(self.consumables);
            self.consumables[| consumables_size] = bag_item;
            ds_list_mark_as_list(consumables,consumables_size);
        } 
    }
    
    //choose gun
    gun_choice = 0;
    if(ds_list_size(gun_choices)!=0)
    {
        var tgun = gun_choices[| gun_choice];
        self.gun = tgun[| item_id];    
    }
    else
    {
        self.gun = -1;
    }
    
    //choose consumable
    consumable_choice = 0;
    if(ds_list_size(consumables)!=0)
    {
        var tconsumable = consumables[| consumable_choice];
        self.consumable = tconsumable[| item_id];    
    }
    else
    {
        self.consumable = -1;
    }
      
}
else
{
    //define appearance
    self.mask = -1;
    self.jetpack = -1;
    self.helmet = -1;
    self.vest = -1;
    self.pants = -1;
    self.shoes = -1;
    self.loaded = false;
    self.gun = -1;
    
    //define stats
    self.hp = 100;
    self.jump = 0;
    self.jet_fuel = 0;
    self.player_speed =0;
    self.hp_regen = 0;
    self.armor = 0;
    self.crit_chance = 0;
    self.scaling =1;
    
    team = -1;

}



self.pre_loaded = false;
self.pre_gun    = -1;

//define ids

gun_id = -1;
mask_id =-1;
jetpack_id =-1;
helmet_id =-1;
vest_id =-1;
pants_id =-1;
shoes_id =-1;
aura_id =-1;
theta = 0;

///gun
gun_callback = -1;
gun_ammo = 0;

prev_jump = 0;

max_hp = -1;

//platforminh
touch_ladder = false;
pressed_prev = false;

dead = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///update hud
if(htme_isLocal())
{
obj_hud.local_player = id;
with(obj_hud)
{
    event_perform(ev_other,ev_user0);
}
}


con = obj_controller;

walk_frame = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///show debug message
show_debug_message("Dead already.");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///add jet fuel
jet_fuel = min(jet_fuel+5,global.jet_fuel);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///regen
hp= min(max_hp,hp+hp_regen);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fire bullet
var tgun = gun_choices[| gun_choice];
//show_message(string(tgun[| 1])+" wew");
if(tgun[| 1]&gt;0)
{
var gun_length = sprite_get_width(sprite_gun) - sprite_get_xoffset(sprite_gun);
var ammo = instance_create(x + (16+gun_length)*cos(theta*pi/180),y - (16+gun_length)*sin(theta*pi/180)-47,obj_bullet);

ammo.direction = theta;
ammo.bullet_id = gun_bullet;
ammo.crit_chance = crit_chance;

alarm[0] = gun_callback;
tgun[| 1] -=1;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sync outs

self.name = mp_map_syncOut("name",self.name);


self.mask = mp_map_syncOut("mask",self.mask);
self.jetpack = mp_map_syncOut("jetpack",self.jetpack);
self.helmet = mp_map_syncOut("helmet",self.helmet);
self.vest = mp_map_syncOut("vest",self.vest);
self.pants = mp_map_syncOut("pants",self.pants);
self.shoes = mp_map_syncOut("shoes",self.shoes);

self.pressed_jump = mp_map_syncOut("pressed_jump",self.pressed_jump);
self.pressed_left = mp_map_syncOut("pressed_left",self.pressed_left);
self.pressed_right = mp_map_syncOut("pressed_right",self.pressed_right);
self.pressed_down = mp_map_syncOut("pressed_down",self.pressed_down);

self.loaded = mp_map_syncOut("loaded",self.loaded);

self.theta = mp_map_syncOut("theta",self.theta);


self.gun = mp_map_syncOut("gun",self.gun);
self.hp = mp_map_syncOut("hp",self.hp);
self.hp_regen = mp_map_syncOut("hp_regen",self.hp_regen);
self.jump = mp_map_syncOut("jump",self.jump);
self.player_speed = mp_map_syncOut("speed",self.player_speed);
self.armor = mp_map_syncOut("armor",self.armor);
self.crit_chance = mp_map_syncOut("crit_chance",self.crit_chance);
self.scaling = mp_map_syncOut("scaling",self.scaling);
self.team = mp_map_syncOut("team",self.team);

self.jet_fuel = mp_map_syncOut("jet_fuel",self.jet_fuel);

//if(htme_isLocal())
//show_debug_message("syncing out.");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///updates
if(htme_isLocal())
{
self.pressed_jump = (con.pressed and con.up) or keyboard_check(vk_up);
self.pressed_left = (con.pressed and !con.right) or keyboard_check(vk_left);
self.pressed_right = (con.pressed and con.right)or keyboard_check(vk_right);
self.pressed_down =  (con.pressed and !con.up) or keyboard_check(vk_down);


self.theta = obj_controller_aim.image_angle;

if(theta &gt;= 90 &amp;&amp; theta &lt;= 270)
image_xscale = -1;
else
image_xscale = 1;



//check if pressed
if(gun!=-1)
{
    if(obj_controller_aim.pressed and !pressed_prev)
    {
        pressed_prev = true;
        alarm[0] = gun_callback;
    }
    if(!obj_controller_aim.pressed and pressed_prev)
    {
        pressed_prev = false;
        alarm[0] = -1;
    }
    
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sync ins
///controls

mp_map_syncIn("name",self.name);

mp_map_syncIn("mask",self.mask);
mp_map_syncIn("jetpack",self.jetpack);
mp_map_syncIn("helmet",self.helmet);
mp_map_syncIn("vest",self.vest);
mp_map_syncIn("pants",self.pants);
mp_map_syncIn("shoes",self.shoes);
mp_map_syncIn("gun",self.gun);

mp_map_syncIn("pressed_jump",self.pressed_jump);
mp_map_syncIn("pressed_left",self.pressed_left);
mp_map_syncIn("pressed_right",self.pressed_right);
mp_map_syncIn("pressed_down",self.pressed_down);

mp_map_syncIn("loaded",self.loaded);

mp_map_syncIn("theta",self.theta);
mp_map_syncIn("hp",self.hp);
mp_map_syncIn("hp_regen",self.hp_regen);
mp_map_syncIn("jump",self.jump);
mp_map_syncIn("speed",self.player_speed);
mp_map_syncIn("armor",self.armor);
mp_map_syncIn("crit_chance",self.crit_chance);
mp_map_syncIn("scaling",self.scaling);
mp_map_syncIn("team",team);

mp_map_syncIn("jet_fuel",self.jet_fuel);

//if(htme_isLocal())
//show_debug_message("syncing in");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check if dead

if(dead and htme_isLocal())
{
   // show_message("dedead");
    show_debug_message("deaded");
    mp_unsync();
   instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///platforming code

//touch_platform
if(!place_meeting(x,y,obj_platform))
    touch_platform = false;

//ladder
if(place_meeting(x,y,obj_ladder))
{
    touch_ladder = true;
}
else
    touch_ladder = false;

//go down ladder
if((touch_ladder &amp;&amp; pressed_down) || (touch_platform &amp;&amp; pressed_down))
{
    if(place_free(x,y+player_speed))
    {
        y+=player_speed;
    }
}




if(place_free(x,y+1) &amp;&amp; !touch_ladder)
{
    if(touch_platform)
    {
        gravity = 0;
        vspeed = 0;
    }
    else
    gravity =0.2;
}
else
{
    gravity = 0;
    vspeed = 0;
}

//jumping
if(touch_ladder)
{
    if(self.pressed_jump)
    {
        y-=player_speed;
    }
}
else
{
    if(!place_free(x,y+1) || touch_platform)
    {    
        if( self.pressed_jump)
        {
            if(vspeed ==  0)
            {
                vspeed = -jump;        
            }
            prev_jump=1;
        }
        else
        prev_jump = 0;
    }
    else
    {
        if( self.pressed_jump)
        {
            if(prev_jump==0)
            {
                if(self.jet_fuel&gt;0)
                {
                    jet_fuel-=1;
                    vspeed-=1;
                }
            }
        }
        else
            prev_jump = 0;
    }
    
    if(vspeed&lt;0) vspeed += gravity;
}



if(self.pressed_right)
{
    x+=player_speed;
}
if(self.pressed_left)
{
    x-=player_speed;
}
if(hspeed!=0)
{
    if(hspeed&gt;=0) hspeed-=0.2;
    else hspeed+=0.2;
}

if(self.pressed_left || self.pressed_right) hspeed =0;

if(max_hp!=-1)
if(hp&lt;max_hp)
if(alarm[1]==-1)
alarm[1]=150;


if(htme_isLocal())
{
    if(jet_fuel&lt;=global.jet_fuel and alarm[2]==-1)
    {
        alarm[2]=120;   
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///loaded
if(!self.pre_loaded and self.loaded)
{
    self.pre_loaded =true;
    event_perform(ev_other,ev_user0);
}

if(self.gun != pre_gun)
{
    event_perform(ev_other,ev_user1);
}

self.pre_gun = self.gun;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_drop">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///get drop

if(other.dead == false)
{
    var drop_id = other.drop_id;
    other.dead = true;
    if(htme_isLocal())
    {
        if(db_is_consumable(obj_database,drop_id))
        {
            var map = ds_list_create();
            map[| item_id] = drop_id;
            map[| item_quantity] = 1;
            var consumables_size = ds_list_size(self.consumables);
            self.consumables[| consumables_size] = map;
            ds_list_mark_as_list(consumables,consumables_size);
            event_perform(ev_keypress,ord('B'));
        }
        if(db_is_gun(obj_database,drop_id))
        {
            var gun_choices_size = ds_list_size(self.gun_choices);
            var gmap = db_get(obj_database,"gun",db_get_ingame(obj_database,drop_id));
            var temp_list = ds_list_create();
            temp_list[| item_id] = drop_id;
            temp_list[| 1 ]      = gmap[? "ammo_count"];
            // show_message(bag_item[| item_id]);
            self.gun_choices[| gun_choices_size] = temp_list ;
            ds_list_mark_as_list(self.gun_choices,gun_choices_size);
            event_perform(ev_keypress,ord('Z'));
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hit
if(!other.dead)
{
    bid = other.bullet_id;
    knock_dir = other.x  &lt;x;
    bullet_crit = other.crit_chance;
    if(random_range(1,100)&lt;bullet_crit)
    crit = true;
    else
    crit = false;
    
    var bmap = db_get(obj_database,"bullet",bid);
    var damage = bmap[? "damage"];
    var net_damage = max(0,damage-armor+crit*damage);
    other.net_damage = net_damage;
    other.enemy_hp = hp;
    
    event_perform(ev_other,ev_user2);
    with(other) event_perform(ev_other,ev_user1);
    other.dead = true;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_platform">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///touch platform
if(other.y&lt;y)
    touch_platform =false;
else
{
    touch_platform = true;
    move_contact_all(90,-1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stop moving
hspeed = -hspeed;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collision
if(!place_free(x,y-16))
{
    move_contact_solid(90,-1);
    vspeed = 0;
}

if(!place_free(x,y+16))
{
    move_contact_solid(270,-1);
    gravity = 0;
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shot inflict dammage

var bmap = db_get(obj_database,"bullet",bid);
var knock_back = bmap[? "knockback"];


if(htme_isLocal())
{
var damage = bmap[? "damage"];
hp-= max(1,damage-armor+crit*damage);
}

crit = false;

if(knock_dir)
hspeed += knock_back;
else
hspeed -= knock_back;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///change gun


gun_id = db_get_ingame(obj_database,gun);


sprite_gun =-1;
if(gun_id!=-1)
{
    sprite_gun = asset_get_index("spr_gun_"+string(gun_id));

    var gun_map = db_get(obj_database,"gun",gun_id);
    gun_callback = gun_map[? "callback"];
    gun_bullet = gun_map[? "bullet_id"];
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///load sprites of equipables

mask_id = db_get_equipable(obj_database,mask);
jetpack_id = db_get_equipable(obj_database,jetpack);
helmet_id = db_get_equipable(obj_database,helmet);
vest_id = db_get_equipable(obj_database,vest);
pants_id = db_get_equipable(obj_database,pants);
shoes_id = db_get_equipable(obj_database,shoes);


sprite_mask =-1;
if(mask_id!=-1)     sprite_mask = asset_get_index("spr_mask_"+string(mask_id));

sprite_jetpack =-1;
if(jetpack_id!=-1)  sprite_jetpack = asset_get_index("spr_jetpack_"+string(jetpack_id));

sprite_helmet =-1;
if(helmet_id!=-1)   sprite_helmet = asset_get_index("spr_helmet_"+string(helmet_id));

sprite_vest =-1;
if(vest_id!=-1)     sprite_vest = asset_get_index("spr_vest_"+string(vest_id));

sprite_pants =-1;
if(pants_id!=-1)    sprite_pants = asset_get_index("spr_pants_"+string(pants_id));

sprite_shoes =-1;
if(shoes_id!=-1)    sprite_shoes = asset_get_index("spr_shoes_"+string(shoes_id));

max_hp = hp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(x&lt;0) x=0;
if(x&gt;room_width) x =room_width;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw nameplate
draw_set_color(image_blend);
draw_set_halign(fa_center);
if(team == obj_team_identifier.team)
draw_sprite(spr_team_identifier,0,x,y-sprite_yoffset-30);
//draw_text(x,y-sprite_yoffset-5-string_height(self.name),self.name);
//draw_text(x,y-sprite_yoffset-30-string_height(self.hp),self.hp);
//draw_text(x,y-sprite_yoffset-45-string_height(string(con.value)),string(con.value));
//draw_text(x,y-sprite_yoffset-60-string_height(string(con.pressed)),string(con.pressed));
draw_set_halign(fa_left);
draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///jectpack smoke
if(prev_jump==0 and self.pressed_jump &amp;&amp; jet_fuel&gt;0 &amp;&amp; !touch_ladder)
effect_create_below(ef_smoke,x,y+8,0,c_white);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw sprites

if(mask_id != -1)
draw_sprite_ext(sprite_mask,0,x,y,image_xscale,1,0,c_white,1);
if(jetpack_id != -1)
draw_sprite_ext(sprite_jetpack,0,x,y,image_xscale,1,0,c_white,1);
if(helmet_id != -1)
draw_sprite_ext(sprite_helmet,0,x,y,image_xscale,1,0,c_white,1);
if(vest_id != -1)
draw_sprite_ext(sprite_vest,0,x,y,image_xscale,1,0,c_white,1);
if(pants_id != -1)
draw_sprite_ext(sprite_pants,0,x,y,image_xscale,1,0,c_white,1);
if(shoes_id != -1)
draw_sprite_ext(sprite_shoes,0,x,y,image_xscale,1,0,c_white,1);


//draw gun
if(gun_id!=-1)
draw_sprite_ext(sprite_gun,0,x + 16*cos(theta*pi/180),y - 16*sin(theta*pi/180)-47,1,image_xscale,theta,c_white,1);


//draw arm

if(vest_id != -1)
{
draw_sprite_ext(sprite_vest,1,x,y-47,1,1,theta,c_white,1);
}
else
draw_sprite_ext(sprite_index,2,x,y-47,1,1,theta,c_white,1);

//draw_paa
if(pressed_left xor image_xscale &gt; 0)
walk_frame+=1;
else
walk_frame-=1;

walk_frame +=9;
walk_frame =walk_frame mod 9;

if(pressed_left)
draw_sprite_ext(feet,walk_frame,x,y,image_xscale,1,0,c_white,1);
else
if(pressed_right)
draw_sprite_ext(feet,walk_frame,x,y,image_xscale,1,0,c_white,1);
else
draw_sprite_ext(feet,0,x,y,image_xscale,1,0,c_white,1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="90">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///prev gun
if(htme_isLocal())
{
if(ds_list_size(gun_choices)!=0)
{
    var tgun = gun_choices[| gun_choice];
    if(tgun[| 1] ==0) 
    {
        ds_list_delete(gun_choices,gun_choice);
        gun_choice-=1;
    }
}
if(ds_list_size(gun_choices)!=0)
{
    gun_choice = (gun_choice-1+ds_list_size(gun_choices))%ds_list_size(gun_choices);
    var tgun = gun_choices[| gun_choice];
    self.gun = tgun[| item_id];
}
else
    self.gun = -1;
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="88">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///next gun
if(htme_isLocal())
{

if(ds_list_size(gun_choices)!=0)
{
    var tgun = gun_choices[| gun_choice];
    if(tgun[| 1] ==0) 
    {
        ds_list_delete(gun_choices,gun_choice);
        gun_choice-=1;
    }
}
if(ds_list_size(gun_choices)!=0)
{
    gun_choice = (gun_choice+1)%ds_list_size(gun_choices);
    var tgun = gun_choices[| gun_choice];
    self.gun = tgun[| item_id];
    
}
else
    self.gun = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="86">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>htme_isLocal()</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create consumable instance
if(ds_list_size(consumables)!=0)
{

var tconsumable = consumables[| consumable_choice];
consumable_id = db_get_ingame(obj_database,tconsumable[| item_id]);
var con = instance_create(0,0,obj_consumable_effect);
con.consumable_id = consumable_id;
con.master = id;
with(con)
{
    event_perform(ev_other,ev_user0);
}

tconsumable[| item_quantity] -=1;

if(tconsumable[| item_quantity]&lt;=0)
{
  //  ds_list_destroy(consumables[| consumable_choice]);
    ds_list_delete(consumables,consumable_choice);
    consumable_choice = max(0,consumable_choice-1);
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///update hud
with(obj_hud)
{
    event_perform(ev_other,ev_user0);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="67">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>htme_isLocal()</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///prev consumable
if(ds_list_size(consumables)&gt;0)
{
consumable_choice -=1;
consumable_choice += ds_list_size(consumables);
consumable_choice = consumable_choice mod ds_list_size(consumables);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///update hud
with(obj_hud)
{
    event_perform(ev_other,ev_user0);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="66">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>htme_isLocal()</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///next consumable
if(ds_list_size(consumables)&gt;0)
{
consumable_choice +=1;
consumable_choice += ds_list_size(consumables);
consumable_choice = consumable_choice mod ds_list_size(consumables);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///update hud
with(obj_hud)
{
    event_perform(ev_other,ev_user0);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
