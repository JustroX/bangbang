<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///define a toggle group



toggle[0,0] = 0;
tog_size[0] = 8;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create nav buttons

for(var i=0; i&lt;8; i++)
{
    var a = instance_create(0,37+i*35,obj_inventory_nav_toggle);
    switch(i)
    {
        case 0: a.label = "Guns"; break;
        case 1: a.label = "Consumables"; break;
       // case 2: a.label = "Masks"; break;
        case 2: a.label = "Jetpack"; break;
        case 3: a.label = "Helmet"; break;
        case 4: a.label = "Vest"; break;
        case 5: a.label = "Pants"; break;
        case 6: a.label = "Shoes"; break;
        case 7: a.label = "Aura"; break;
    }
    a.master = obj_inventory_control;
    a.tog_group = 0;
    a.index = i;
    toggle[0,i] = a;
}    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///load bag

//sorted bags equipables
masks[0,0]=0;
jetpacks[0,0]=0;
helmets[0,0]=0;
vests[0,0]=0;
pants[0,0]=0;
shoes[0,0]=0;
auras[0,0]=0;

//sorted in game items
guns[0,0] = 0;
consumables[0,0] = 0;



db = db_connect();

for(var i=0; i&lt;ds_list_size(global.bag); i++)
{
    var cur_holder = global.bag[| i];
    var cur;
    cur[item_id] = cur_holder[| item_id];
    cur[item_quantity] = cur_holder[| item_quantity];
    var item = cur[item_id];
    var item_map = db.item[| item];
    var item_equipable = item_map[? "type"];
    
    if(item_equipable)
    {
       var equipable_id = item_map[? "info"];
       var equipable_map = db.equipable[| equipable_id];
       var type = equipable_map[? "type"];
       switch(type)
       {
            case 0: masks[array_height_2d(masks),item_id] = cur[item_id];
            masks[array_height_2d(masks)-1,item_quantity] = cur[item_quantity]; break;
            case 1: jetpacks[array_height_2d(jetpacks),item_id] = cur[item_id];
            jetpacks[array_height_2d(jetpacks)-1,item_quantity] = cur[item_quantity]; break;
            case 2: helmets[array_height_2d(helmets),item_id] = cur[item_id];
            helmets[array_height_2d(helmets)-1,item_quantity] = cur[item_quantity]; break;
            case 3: vests[array_height_2d(vests),item_id] = cur[item_id];
            vests[array_height_2d(vests)-1,item_quantity] = cur[item_quantity]; break;
            case 4: pants[array_height_2d(pants),item_id] = cur[item_id];
            pants[array_height_2d(pants)-1,item_quantity] = cur[item_quantity]; break;
            case 5: shoes[array_height_2d(shoes),item_id] = cur[item_id];
            shoes[array_height_2d(shoes)-1,item_quantity] = cur[item_quantity]; break;
            case 6: auras[array_height_2d(auras),item_id] = cur[item_id];
            auras[array_height_2d(auras)-1,item_quantity] = cur[item_quantity]; break;
       }
    }
    else
    {
        var ingame_id = item_map[? "info"];
        var ingame_map = db.ingame[| ingame_id];
        var is_gun  = ingame_map[? "type"];
        if(is_gun) 
        {
            guns[array_height_2d(guns),item_id] = cur[item_id];
            guns[array_height_2d(guns)-1,item_quantity] = cur[item_quantity];
        }
        else
        {
            consumables[array_height_2d(consumables),item_id] = cur[item_id];
            consumables[array_height_2d(consumables)-1,item_quantity] = cur[item_quantity];
        }
    }
    

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///render page page position
page_position =0;
nav_positions[0] = 52;
target = 0;

//create guns
iter = array_height_2d(guns) -1+ (6-array_height_2d(guns))% 5;
if(iter==0) iter = 5;
for(var i=1; i&lt;=iter; i++)
{
    var row = (i-1) div 5;
    var col = (i-1) % 5;
    
    var but = instance_create(165+col*64,nav_positions[0]+56+row*64,obj_inventory_page_item);
    if(row==0 and col==4)
        but.image_index = 1;
    else
    if(row==0)
        but.image_index = 0;
    else
    if(col==4)
        but.image_index = 3;
    else
        but.image_index = 2;
    if(i&lt;array_height_2d(guns))
     {but.item[item_id] = guns[i,item_id]; but.item[item_quantity]= guns[i,item_quantity]; }
     else
     but.item[item_id] = -1;
     but.item_type = 0;
} 
nav_positions[1] = nav_positions[0] + 56 + 64*((array_height_2d(guns)-2) div 5+1);

//create consumables
iter = array_height_2d(consumables) -1+ (6-array_height_2d(consumables))% 5;
if(iter==0) iter = 5;
for(var i=1; i&lt;=iter; i++)
{
    var row = (i-1) div 5;
    var col = (i-1) % 5;
    
    var but = instance_create(165+col*64,nav_positions[1]+56+row*64,obj_inventory_page_item);
    if(row==0 and col==4)
        but.image_index = 1;
    else
    if(row==0)
        but.image_index = 0;
    else
    if(col==4)
        but.image_index = 3;
    else
        but.image_index = 2;
    if(i&lt;array_height_2d(consumables))
     {
     but.item[item_id] = consumables[i,item_id]; 
     but.item[item_quantity]= consumables[i,item_quantity]; 
      }
     else
     but.item[item_id] = -1;
     but.item_type = 1;
} 

nav_positions[2] = nav_positions[1] + 56 + 64*((array_height_2d(consumables)-2) div 5+1);


//create masks
/*
iter = array_height_2d(masks) -1+ (6-array_height_2d(masks))% 5;
if(iter==0) iter = 5;
for(var i=1; i&lt;=iter; i++)
{
    var row = (i-1) div 5;
    var col = (i-1) % 5;
    
    var but = instance_create(165+col*64,nav_positions[2]+56+row*64,obj_inventory_page_item);
    if(row==0 and col==4)
        but.image_index = 1;
    else
    if(row==0)
        but.image_index = 0;
    else
    if(col==4)
        but.image_index = 3;
    else
        but.image_index = 2;
    if(i&lt;array_height_2d(masks))
     {but.item[item_id] = masks[i,item_id]; but.item[item_quantity]= masks[i,item_quantity]; }
     else
     but.item[item_id]  = -1;
     but.item_type = 2;
} 
nav_positions[3] = nav_positions[2] + 56 + 64*((array_height_2d(masks)-2) div 5+1);
*/

//create jetpacks
iter = array_height_2d(jetpacks) -1+ (6-array_height_2d(jetpacks))% 5;
if(iter==0) iter = 5;
for(var i=1; i&lt;=iter; i++)
{
    var row = (i-1) div 5;
    var col = (i-1) % 5;
    
    var but = instance_create(165+col*64,nav_positions[2]+56+row*64,obj_inventory_page_item);
    if(row==0 and col==4)
        but.image_index = 1;
    else
    if(row==0)
        but.image_index = 0;
    else
    if(col==4)
        but.image_index = 3;
    else
        but.image_index = 2;
    if(i&lt;array_height_2d(jetpacks))
     {but.item[item_id] = jetpacks[i,item_id]; but.item[item_quantity]= jetpacks[i,item_quantity]; }
     else
     but.item[item_id]  = -1;
     but.item_type = 3;
} 

nav_positions[3] = nav_positions[2] + 56 + 64*((array_height_2d(jetpacks)-2) div 5+1);
//create helmets
iter = array_height_2d(helmets) -1+ (6-array_height_2d(helmets))% 5;
if(iter==0) iter = 5;
for(var i=1; i&lt;=iter; i++)
{
    var row = (i-1) div 5;
    var col = (i-1) % 5;
    
    var but = instance_create(165+col*64,nav_positions[3]+56+row*64,obj_inventory_page_item);
    if(row==0 and col==4)
        but.image_index = 1;
    else
    if(row==0)
        but.image_index = 0;
    else
    if(col==4)
        but.image_index = 3;
    else
        but.image_index = 2;
    if(i&lt;array_height_2d(helmets))
     {but.item[item_id] = helmets[i,item_id]; but.item[item_quantity]= helmets[i,item_quantity]; }
     else
     but.item[item_id]  = -1;
     but.item_type = 4;
} 

nav_positions[4] = nav_positions[3] + 56 + 64*((array_height_2d(helmets)-2) div 5+1);
//create vests
iter = array_height_2d(vests) -1+ (6-array_height_2d(vests))% 5;
if(iter==0) iter = 5;
for(var i=1; i&lt;=iter; i++)
{
    var row = (i-1) div 5;
    var col = (i-1) % 5;
    
    var but = instance_create(165+col*64,nav_positions[4]+56+row*64,obj_inventory_page_item);
    if(row==0 and col==4)
        but.image_index = 1;
    else
    if(row==0)
        but.image_index = 0;
    else
    if(col==4)
        but.image_index = 3;
    else
        but.image_index = 2;
    if(i&lt;array_height_2d(vests))
     {but.item[item_id] = vests[i,item_id]; but.item[item_quantity]= vests[i,item_quantity]; }
     else
     but.item[item_id]  = -1;
     but.item_type = 5;
} 

nav_positions[5] = nav_positions[4] + 56 + 64*((array_height_2d(vests)-2) div 5+1);

//create pants
iter = array_height_2d(pants) -1+ (6-array_height_2d(pants))% 5;
if(iter==0) iter = 5;
for(var i=1; i&lt;=iter; i++)
{
    var row = (i-1) div 5;
    var col = (i-1) % 5;
    
    var but = instance_create(165+col*64,nav_positions[5]+56+row*64,obj_inventory_page_item);
    if(row==0 and col==4)
        but.image_index = 1;
    else
    if(row==0)
        but.image_index = 0;
    else
    if(col==4)
        but.image_index = 3;
    else
        but.image_index = 2;
    if(i&lt;array_height_2d(pants))
     {but.item[item_id] = pants[i,item_id]; but.item[item_quantity]= pants[i,item_quantity]; }
     else
     but.item[item_id] = -1;
     but.item_type = 6;
} 

nav_positions[6] = nav_positions[5] + 56 + 64*((array_height_2d(pants)-2) div 5+1);

//create shoes
iter = array_height_2d(shoes) -1+ (6-array_height_2d(shoes))% 5;
if(iter==0) iter = 5;
for(var i=1; i&lt;=iter; i++)
{
    var row = (i-1) div 5;
    var col = (i-1) % 5;
    
    var but = instance_create(165+col*64,nav_positions[6]+56+row*64,obj_inventory_page_item);
    if(row==0 and col==4)
        but.image_index = 1;
    else
    if(row==0)
        but.image_index = 0;
    else
    if(col==4)
        but.image_index = 3;
    else
        but.image_index = 2;
    if(i&lt;array_height_2d(shoes))
     {but.item[item_id] = shoes[i,item_id]; but.item[item_quantity]= shoes[i,item_quantity]; }
     else
    but.item[item_id] = -1;
     but.item_type = 7;
} 

nav_positions[7] = nav_positions[6] + 56 + 64*((array_height_2d(shoes)-2) div 5+1);

//create auras
iter = array_height_2d(auras) -1+ (6-array_height_2d(auras))% 5;
if(iter==0) iter = 5;
for(var i=1; i&lt;=iter; i++)
{
    var row = (i-1) div 5;
    var col = (i-1) % 5;
    
    var but = instance_create(165+col*64,nav_positions[7]+56+row*64,obj_inventory_page_item);
    if(row==0 and col==4)
        but.image_index = 1;
    else
    if(row==0)
        but.image_index = 0;
    else
    if(col==4)
        but.image_index = 3;
    else
        but.image_index = 2;
    if(i&lt;array_height_2d(auras))
     {but.item[item_id] = auras[i,item_id]; but.item[item_quantity]= auras[i,item_quantity]; }
     else
     but.item[item_id]  = -1;
     but.item_type = 8;
} 

//nav_positions[9] = nav_positions[8] + 56 + 64*((array_height_2d(auras)-2) div 5+1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mouse down
mouse_down = false; //to check swiping
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///glide animation
if(page_position != target)
{
    var dy = target-page_position;
    page_position += dy div 5 ;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///swipe check
if(mouse_check_button(mb_left))
{
    if(!mouse_down)
    {
        mouse_down = true;
        init_mouse_y = mouse_y;
        init_mouse_page_position = page_position;
    }
    else
    {
        d_mouse_y = mouse_y - init_mouse_y;
        if(abs(d_mouse_y) &gt;20) 
        {
            target = max(0,init_mouse_page_position - d_mouse_y);  
            target = min(nav_positions[7]-52,target);       
        }
    }
    
    
}
else
{
    mouse_down = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw stats

draw_text(574,236,string(global.level));
draw_text(574,260,string(global.hp));
draw_text(574,284,string(global.player_speed));
draw_text(574,308,string(global.armor));
draw_text(574,332,string(global.crit_chance));

draw_text(648,236,string(global.xp));
draw_text(648,260,string(global.hp_regen));
draw_text(648,284,string(global.jet_fuel));
draw_text(648,308,string(global.jump));
draw_text(648,332,string(global.life_steal));

draw_text(576,64,global.username);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw labels

for(var i=0; i&lt;8; i++)
    draw_labels(i,page_position);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
