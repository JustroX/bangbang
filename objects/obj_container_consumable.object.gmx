<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hud_container</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1002</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///go to hud pos
x = view_xview[0]+view_wview[0]-32-96-32-128;
y = view_yview[0]+view_hview[0]-64-32;

//prev_con = virtual_key_add(view_wview[0]-32-96-32-128,view_hview[0]-64-32,32,64,ord('C'));
//next_con = virtual_key_add(view_wview[0]-32-96-32-128+96,view_hview[0]-64-32,32,64,ord('B'));
//act_con = virtual_key_add(view_wview[0]-32-96-32-128+32,view_hview[0]-64-32,64,64,ord('V'));

prev = -1;

//virtual_key_show(prev_con);
//virtual_key_show(next_con);
//virtual_key_show(act_con);

prev_pressed0 = 0;
prev_pressed1 = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///go to hud pos

x = view_xview[0]+view_wview[0]-32-96-32-128;
y = view_yview[0]+view_hview[0]-64-32;




pressed0 = device_mouse_check_button(0,mb_left);
pressed1 = device_mouse_check_button(1,mb_left);


if(pressed0 and !prev_pressed0 and obj_game_control.player_alive)
{
    var xx = device_mouse_x(0) - x;
    var yy = device_mouse_y(0) - y;
    if(xx&gt;0 and xx&lt;32 and yy&gt;0 and yy&lt;64)
    {
        with(obj_game_control.player)
        {
            event_perform(ev_keypress,ord('C'));
        }
    }
    if(xx&gt;96 and xx&lt;128 and yy&gt;0 and yy&lt;64)
    {
        with(obj_game_control.player)
        {
            event_perform(ev_keypress,ord('B'));
        }
    }
    if(xx&gt;32 and xx&lt;96 and yy&gt;0 and yy&lt;64)
    {
        with(obj_game_control.player)
        {
            event_perform(ev_keypress,ord('V'));
        }
    }
}

prev_pressed0 = pressed0;

if(pressed1 and !prev_pressed1 and obj_game_control.player_alive)
{
    var xx = device_mouse_x(1) - x;
    var yy = device_mouse_y(1) - y;
    if(xx&gt;0 and xx&lt;32 and yy&gt;0 and yy&lt;64)
    {
        with(obj_game_control.player)
        {
            event_perform(ev_keypress,ord('C'));
        }
    }
    if(xx&gt;96 and xx&lt;128 and yy&gt;0 and yy&lt;64)
    {
        with(obj_game_control.player)
        {
            event_perform(ev_keypress,ord('B'));
        }
    }
    if(xx&gt;32 and xx&lt;96 and yy&gt;0 and yy&lt;64)
    {
        with(obj_game_control.player)
        {
            event_perform(ev_keypress,ord('V'));
        }
    }
}

prev_pressed1 = pressed1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(obj_game_control.player_alive)
{
    var local_player = obj_game_control.player;
  //  if(local_player.consumable_choice!=prev)
  //  {
        if(ds_list_size(local_player.consumables)&gt;0)
        {
            var tconsumable = local_player.consumables[| local_player.consumable_choice];
            if(tconsumable[| 1]!=0)
            {
            var ingame_map = db_get(obj_database,"ingame",db_get_ingame(obj_database,tconsumable[| item_id]));
            sprite_consumable = asset_get_index("spr_consumable_"+string(ingame_map[? "info"])+"_display");    
           }
        else
        sprite_consumable = -1;
           //show_message("spr_consumable_"+string(ingame_map[? "info"]));
        }
        else
        sprite_consumable = -1;
   // }   
  //  prev =local_player.consumable_choice;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw gun
if(obj_game_control.player_alive)
{
    if(sprite_consumable!=-1)
    {
    draw_self();
    draw_sprite(sprite_consumable,0,x+32,y);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
